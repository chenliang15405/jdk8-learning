package com.jdk8.features.arithmetic.interview.tree;

/**
 * Trie: 字典树、前缀树
 *
 *  从根节点开始，给定一个字符串，将字符串从根节点开始走，将字符放在链接节点的路径上，
 *  依次向下创建节点，节点中保存的是路径上字符的到达次数，并且记录该字符串的结尾次数
 *
 *  可以用来判断有多少个字符串以这个字符串为前缀（遍历这个字符串并判断当前字符在Trie树是否有节点，就是节点不为空）
 *  有多少个字符串以这个字符串结尾（遍历这个字符串，判断Trie中是否存在这些字符，并且不是包含这个字符串，而是以这个字符串结尾，遍历到
 *  结尾字符，并判断当前的Trie中的end是否不等于0，如果是则表示是以这个字符串结尾）
 *
 *
 * @author alan.chen
 * @date 2020/6/25 11:32 PM
 */
public class TrieNode {


}
